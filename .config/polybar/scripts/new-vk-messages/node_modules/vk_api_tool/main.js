const request = require('request');

class VK_API {
    constructor(access_token, version, lang) {
        this.access_token = access_token;
        this.version = version;
        this.lang = lang;
    }
    use(method, params = {}) {
        return new Promise((resolve, reject) => {
            delete params.access_token;
            delete params.v;
            let url_params = '';
            for (let param in params) {url_params += `&${param}=${params[param]}`};
            url_params += `&access_token=${this.access_token}&v=${this.version}&lang=${this.lang}`;
	        request(encodeURI(`https://api.vk.com/method/${method}?${url_params}`), (err, res, data) => {
                if (err) reject(new Error(err));
                else {
                    let parsed_data = JSON.parse(data);
                    if (parsed_data.error) reject(new Error(parsed_data.error.error_msg + `\nYour request: https://api.vk.com/method/${method}?${url_params}`));
                    else resolve(parsed_data.response);
                }
            });
        });
    }
}

module.exports = VK_API;
